{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ProductCategoryRow","category","this","props","colSpan","React","Component","ProductRow","product","name","stocked","style","color","price","ProductTable","filterText","inStockOnly","rows","lastCategory","products","forEach","indexOf","push","SearchBar","handleFilterTextChange","bind","handleInStockChange","e","onFilterTextChange","target","value","onInStockChange","checked","type","placeholder","onChange","FilterableProductTable","state","setState","PRODUCTS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a5eb26d.chunk.js","sourcesContent":["import './App.css';\nimport React from \"react\";\n\n\nclass ProductCategoryRow extends React.Component {\n    render() {\n        const category = this.props.category;\n        return (\n            <tr>\n                <th colSpan=\"2\">\n                    {category}\n                </th>\n            </tr>\n        );\n    }\n}\n\nclass ProductRow extends React.Component {\n    render() {\n        const product = this.props.product;\n        const name = product.stocked ?\n            product.name :\n            <span style={{color: 'red'}}>\n        {product.name}\n      </span>;\n\n        return (\n            <tr>\n                <td>{name}</td>\n                <td>{product.price}</td>\n            </tr>\n        );\n    }\n}\n\nclass ProductTable extends React.Component {\n    render() {\n        const filterText = this.props.filterText;\n        const inStockOnly = this.props.inStockOnly;\n\n        const rows = [];\n        let lastCategory = null;\n\n        this.props.products.forEach((product) => {\n            if (product.name.indexOf(filterText) === -1) {\n                return;\n            }\n            if (inStockOnly && !product.stocked) {\n                return;\n            }\n            if (product.category !== lastCategory) {\n                rows.push(\n                    <ProductCategoryRow\n                        category={product.category}\n                        key={product.category} />\n                );\n            }\n            rows.push(\n                <ProductRow\n                    product={product}\n                    key={product.name}\n                />\n            );\n            lastCategory = product.category;\n        });\n\n        return (\n            <table>\n                <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Price</th>\n                </tr>\n                </thead>\n                <tbody>{rows}</tbody>\n            </table>\n        );\n    }\n}\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n        this.handleInStockChange = this.handleInStockChange.bind(this);\n    }\n\n    handleFilterTextChange(e) {\n        this.props.onFilterTextChange(e.target.value);\n    }\n\n    handleInStockChange(e) {\n        this.props.onInStockChange(e.target.checked);\n    }\n\n    render() {\n        return (\n            <form>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    value={this.props.filterText}\n                    onChange={this.handleFilterTextChange}\n                />\n                <p>\n                    <input\n                        type=\"checkbox\"\n                        checked={this.props.inStockOnly}\n                        onChange={this.handleInStockChange}\n                    />\n                    {' '}\n                    Only show products in stock\n                </p>\n            </form>\n        );\n    }\n}\n\nclass FilterableProductTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterText: '',\n            inStockOnly: false\n        };\n\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n        this.handleInStockChange = this.handleInStockChange.bind(this);\n    }\n\n    handleFilterTextChange(filterText) {\n        this.setState({\n            filterText: filterText\n        });\n    }\n\n    handleInStockChange(inStockOnly) {\n        this.setState({\n            inStockOnly: inStockOnly\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <SearchBar\n                    filterText={this.state.filterText}\n                    inStockOnly={this.state.inStockOnly}\n                    onFilterTextChange={this.handleFilterTextChange}\n                    onInStockChange={this.handleInStockChange}\n                />\n                <ProductTable\n                    products={this.props.products}\n                    filterText={this.state.filterText}\n                    inStockOnly={this.state.inStockOnly}\n                />\n            </div>\n        );\n    }\n}\n\n\nconst PRODUCTS = [\n    {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\n    {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\n    {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\n    {category: 'Sporting Goods', price: '$69.99', stocked: true, name: 'Volleyball'},\n    {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\n    {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\n    {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\n];\n\nfunction App() {\n    return (\n        <FilterableProductTable products={PRODUCTS} />\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n\n/* TEST\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n\n\n/* Время\nfunction tick() {\n    const element = (\n        <div>\n            <h1>Hello, world!</h1>\n            <h2>It is {new Date().toLocaleTimeString()}.</h2>\n        </div>\n    );\n    ReactDOM.render(element, document.getElementById('root'));\n}\n\nsetInterval(tick, 1000);\n*/"],"sourceRoot":""}